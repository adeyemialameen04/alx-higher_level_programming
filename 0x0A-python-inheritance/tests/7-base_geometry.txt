>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

>>> bg.integer_validator("", 10)  # Test with empty string as name

>>> bg.integer_validator(123, 10)  # Test with non-string as name

>>> bg.integer_validator("value", None)  # Test with None as value
Traceback (most recent call last):
...
TypeError: value must be an integer

>>> bg.integer_validator("value", True)  # Test with boolean as value
Traceback (most recent call last):
...
TypeError: value must be an integer

>>> bg.integer_validator("value", [1, 2, 3])  # Test with list as value
Traceback (most recent call last):
...
TypeError: value must be an integer

>>> bg.integer_validator("value", (1, 2, 3))  # Test with tuple as value
Traceback (most recent call last):
...
TypeError: value must be an integer

>>> bg.integer_validator("value", {1, 2, 3})  # Test with set as value
Traceback (most recent call last):
...
TypeError: value must be an integer

>>> bg.integer_validator("value", {"a": 1, "b": 2})  # Test with dict as value
Traceback (most recent call last):
...
TypeError: value must be an integer

>>> bg.integer_validator("value", 1.5)  # Test with float as value
Traceback (most recent call last):
...
TypeError: value must be an integer